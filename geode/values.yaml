## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## Enable diagnostic mode in the deployment
## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
## @param diagnosticMode.command Command to override all containers in the deployment
## @param diagnosticMode.args Args to override all containers in the deployment
##
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity

## @section Apache Geode Common parameters

## Bitnami Apache Geode image
## ref: https://hub.docker.com/r/bitnami/geode/tags/
## @param image.registry Apache Geode image registry
## @param image.repository Apache Geode image repository
## @param image.tag Apache Geode image tag (immutable tags are recommended)
## @param image.pullPolicy Apache Geode image pull policy
## @param image.pullSecrets Apache Geode image pull secrets
## @param image.debug Enable Apache Geode image debug mode
##
image:
  registry: docker.io
  repository: bitnami/geode
  tag: 1.14.4-debian-11-r3
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false
## @param groups List of Apache Geode member groups to belong to
## ref: https://github.com/bitnami/bitnami-docker-geode#apache-geode-cluster-configuration
## Caveats: it's not possible to indicate different groups for each Apache Geode member
##
groups: []
## Authentication parameters
## ref: https://github.com/bitnami/bitnami-docker-geode#security
##
auth:
  ## @param auth.enabled Enable Apache Geode security
  ##
  enabled: true
  ## @param auth.securityManager Fully qualified name of the class that implements the SecurityManager interface
  ## Note: The "ExampleSecurityManager" is not recommended for production environments
  ##
  securityManager: org.apache.geode.examples.security.ExampleSecurityManager
  ## @param auth.username Username credential to use to connect with locators
  ##
  username: admin
  ## @param auth.password Password credential to use to connect with locators
  ##
  password: ""
  ## @param auth.existingSecret Name of the existing secret containing to use to connect with locators
  ## Create this secret running the command below where SECRET_NAME is the name of the secret you want to create:
  ##       kubectl create secret generic SECRET_NAME --from-literal=username=USERNAME --from-literal=password=PASSWORD
  ##
  existingSecret: ""
  ## TLS configuration
  ##
  tls:
    ## @param auth.tls.enabled Enable TLS authentication
    ##
    enabled: false
    ## @param auth.tls.components List of components for which to enable TLS
    ## Allowed values: cluster, gateway, web, jmx, locator, server and all
    ##
    components: []
    ##
    ## @param auth.tls.existingSecret Name of the existing secret containing the TLS certificates for the Apache Geode nodes
    ## The secret should contain:
    ##  - A trust store
    ##  - One key store per Apache Geode node you have in the cluster
    ## Create this secret following the steps below:
    ## 1) Generate your trust store and keystore files. Helpful script: https://raw.githubusercontent.com/confluentinc/confluent-platform-security-tools/master/kafka-generate-ssl.sh
    ## 2) Rename your trust store to `geode.truststore.jks`
    ## 3) Rename your key stores to `geode-locator-X.keystore.jks` where X is the ID of each Locator node
    ## 4) Rename your key stores to `geode-server-X.keystore.jks` where X is the ID of each Cache Server node
    ## 5) Run the command below where SECRET_NAME is the name of the secret you want to create:
    ##       kubectl create secret generic SECRET_NAME --from-file=./geode.truststore.jks --from-file=./geode-locator-0.keystore.jks --from-file=./geode-server-1.keystore.jks ...
    ##
    existingSecret: ""
    ## @param auth.tls.keystorePassword Password to access they key stores when they are password-protected
    ##
    keystorePassword: ""
    ## @param auth.tls.truststorePassword Password to access they trust store when it is password-protected
    ##
    truststorePassword: ""
    ## @param auth.tls.requireAuthentication Enable two-way authentication
    ##
    requireAuthentication: false
    ## @param auth.tls.endpointIdentificationEnabled Enable server hostname validation using server certificates
    ##
    endpointIdentificationEnabled: false

## @section Apache Geode Locator parameters

locator:
  ## @param locator.logLevel Log level for Locator nodes
  ## ref: https://github.com/bitnami/bitnami-docker-geode#apache-geode-configuration
  ##
  logLevel: "info"
  ## @param locator.initialHeapSize Initial size of the heap on Locator nodes
  ## ref: https://github.com/bitnami/bitnami-docker-geode#apache-geode-configuration
  ##
  initialHeapSize: ""
  ## @param locator.maxHeapSize Maximum size of the heap on Locator nodes
  ## ref: https://github.com/bitnami/bitnami-docker-geode#apache-geode-configuration
  ##
  maxHeapSize: ""
  ## @param locator.configuration Specify content for gemfire.properties on Locator nodes (auto-generated based on other env. vars otherwise)
  ## e.g:
  ## configuration: |-
  ##   deploy-working-dir=/bitnami/geode/data
  ##   log-level=info
  ##   ...
  ##
  configuration: ""
  ## @param locator.existingConfigmap The name of an existing ConfigMap with your custom configuration for Locator
  ## NOTE: When it's set the locator.configuration parameter is ignored
  ##
  existingConfigmap: ""
  ## @param locator.log4j Specify content for log4j2.xml on Locator nodes (optional)
  ##
  log4j: ""
  ## @param locator.existingLog4jConfigMap Name of existing ConfigMap containing a custom log4j2.xml configuration for Locator
  ## NOTE: When it's set the locator.log4j is ignored
  ##
  existingLog4jConfigMap: ""
  ## @param locator.replicaCount Number of Locator replicas to deploy
  ##
  replicaCount: 2
  ## @param locator.podManagementPolicy Locator statefulset Pod Management Policy Type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
  ##
  podManagementPolicy: OrderedReady
  ## @param locator.containerPorts.locator Locator multicast container port
  ## @param locator.containerPorts.http Locator HTTP container port
  ## @param locator.containerPorts.rmi Locator RMI container port
  ## @param locator.containerPorts.metrics Locator internal metrics container port
  ##
  containerPorts:
    locator: 10334
    http: 7070
    rmi: 1099
    metrics: 9915
  ## Configure extra options for Locator containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param locator.livenessProbe.enabled Enable livenessProbe on Locator containers
  ## @param locator.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param locator.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param locator.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param locator.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param locator.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  ## @param locator.readinessProbe.enabled Enable readinessProbe on Locator containers
  ## @param locator.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param locator.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param locator.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param locator.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param locator.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  ## @param locator.startupProbe.enabled Enable startupProbe on Locator containers
  ## @param locator.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param locator.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param locator.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param locator.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param locator.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 15
    successThreshold: 1
  ## @param locator.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param locator.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param locator.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Locator resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param locator.resources.limits The resources limits for the Locator containers
  ## @param locator.resources.requests The requested resources for the Locator containers
  ##
  resources:
    limits: {}
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param locator.podSecurityContext.enabled Enabled Locator pods' Security Context
  ## @param locator.podSecurityContext.fsGroup Set Locator pod's Security Context fsGroup
  ## @param locator.podSecurityContext.sysctls [array] List of namespaced sysctls used for the Locator pods
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
    ## ref: https://geode.apache.org/docs/guide/114/managing/monitor_tune/disabling_tcp_syn_cookies.html
    sysctls:
      - name: net.ipv4.tcp_syncookies
        value: "0"
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param locator.containerSecurityContext.enabled Enabled Locator containers' Security Context
  ## @param locator.containerSecurityContext.runAsUser Set Locator containers' Security Context runAsUser
  ## @param locator.containerSecurityContext.runAsNonRoot Set Locator containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
  ## @param locator.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param locator.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param locator.hostAliases Locator pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param locator.podLabels Extra labels for Locator pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param locator.podAnnotations Annotations for Locator pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param locator.podAffinityPreset Pod affinity preset. Ignored if `locator.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param locator.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `locator.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node locator.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param locator.nodeAffinityPreset.type Node affinity preset type. Ignored if `locator.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param locator.nodeAffinityPreset.key Node label key to match. Ignored if `locator.affinity` is set
    ##
    key: ""
    ## @param locator.nodeAffinityPreset.values Node label values to match. Ignored if `locator.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param locator.affinity Affinity for Locator pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `locator.podAffinityPreset`, `locator.podAntiAffinityPreset`, and `locator.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param locator.nodeSelector Node labels for Locator pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param locator.tolerations Tolerations for Locator pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param locator.terminationGracePeriodSeconds In seconds, time the given to the Locator pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param locator.topologySpreadConstraints Topology Spread Constraints for Locator pods assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param locator.updateStrategy.type Locator statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param locator.priorityClassName Locator pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param locator.schedulerName Name of the k8s scheduler (other than default) for Locator pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param locator.lifecycleHooks for the Locator container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param locator.extraFlags Additional command line flags to start Locator nodes
  ## e.g.
  ## extraFlags:
  ##   - "--J=-Dfoo.bar=true"
  ##
  extraFlags: []
  ## @param locator.extraEnvVars Array with extra environment variables to add to Locator nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param locator.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Locator nodes
  ##
  extraEnvVarsCM: ""
  ## @param locator.extraEnvVarsSecret Name of existing Secret containing extra env vars for Locator nodes
  ##
  extraEnvVarsSecret: ""
  ## @param locator.extraVolumes Optionally specify extra list of additional volumes for the Locator pod(s)
  ##
  extraVolumes: []
  ## @param locator.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Locator container(s)
  ##
  extraVolumeMounts: []
  ## @param locator.sidecars Add additional sidecar containers to the Locator pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param locator.initContainers Add additional init containers to the Locator pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Apache Geode Locator service parameters
  ##
  service:
    ## @param locator.service.type Locator service type
    ##
    type: ClusterIP
    ## @param locator.service.ports.locator Locator multicast service port
    ## @param locator.service.ports.http Locator HTTP service port
    ## @param locator.service.ports.rmi Locator RMI service port
    ##
    ports:
      locator: 10334
      http: 7070
      rmi: 1099
    ## Node ports to expose
    ## @param locator.service.nodePorts.locator Node port for multicast
    ## @param locator.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      locator: ""
      http: ""
    ## @param locator.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/user-guide/services/
    ##
    sessionAffinity: None
    ## @param locator.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
    ## @param locator.service.clusterIP Locator service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param locator.service.loadBalancerIP Locator service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param locator.service.loadBalancerSourceRanges Locator service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param locator.service.externalTrafficPolicy Locator service external traffic policy
    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param locator.service.annotations Additional custom annotations for Locator service
    ##
    annotations: {}
    ## @param locator.service.extraPorts Extra ports to expose in the Locator service (normally used with the `sidecar` value)
    ##
    extraPorts: []
  ## Apache Geode Locator persistence parameters
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param locator.persistence.enabled Enable persistence on Locator replicas using a `PersistentVolumeClaim`
    ##
    enabled: true
    ## @param locator.persistence.storageClass MariaDB secondary persistent volume storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## @param locator.persistence.annotations MariaDB secondary persistent volume claim annotations
    ##
    annotations: {}
    ## @param locator.persistence.accessModes MariaDB secondary persistent volume access Modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param locator.persistence.size MariaDB secondary persistent volume size
    ##
    size: 8Gi

## @section Apache Geode Cache Server parameters

server:
  ## @param server.logLevel Log level for Cache Server nodes
  ## ref: https://github.com/bitnami/bitnami-docker-geode#apache-geode-configuration
  ##
  logLevel: "info"
  ## @param server.initialHeapSize Initial size of the heap on Cache Server nodes
  ## ref: https://github.com/bitnami/bitnami-docker-geode#apache-geode-configuration
  ##
  initialHeapSize: ""
  ## @param server.maxHeapSize Maximum size of the heap on Cache Server nodes
  ## ref: https://github.com/bitnami/bitnami-docker-geode#apache-geode-configuration
  ##
  maxHeapSize: ""
  ## @param server.configuration Specify content for gemfire.properties on Cache server nodes (auto-generated based on other env. vars otherwise)
  ## e.g:
  ## configuration: |-
  ##   deploy-working-dir=/bitnami/geode/data
  ##   log-level=info
  ##   ...
  ##
  configuration: ""
  ## @param server.existingConfigmap The name of an existing ConfigMap with your custom configuration for Cache server
  ## NOTE: When it's set the server.configuration parameter is ignored
  ##
  existingConfigmap: ""
  ## @param server.log4j Specify content for log4j2.xml on Cache server nodes (optional)
  ##
  log4j: ""
  ## @param server.existingLog4jConfigMap Name of existing ConfigMap containing a custom log4j2.xml configuration for Cache server
  ## NOTE: When it's set the server.log4j is ignored
  ##
  existingLog4jConfigMap: ""
  ## @param server.restoreRedundancyOnContainerTermination Use a PreStop hook on container termination to restore redundancy to partitioned regions and reassign which members host the primary copies
  ## NOTE: Ignored if server.lifecycleHooks is set or server.replicaCount=1
  ##
  restoreRedundancyOnContainerTermination: true
  ## @param server.replicaCount Number of Cache Server replicas to deploy
  ##
  replicaCount: 3
  ## @param server.podManagementPolicy Cache Server statefulset Pod Management Policy Type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
  ##
  podManagementPolicy: OrderedReady
  ## @param server.containerPorts.server Cache Server container port
  ## @param server.containerPorts.http Cache Server HTTP container port
  ## @param server.containerPorts.rmi Cache Server RMI container port
  ## @param server.containerPorts.metrics Cache Server internal metrics container port
  ##
  containerPorts:
    server: 40404
    http: 7070
    rmi: 1099
    metrics: 9915
  ## Configure extra options for Cache server containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param server.livenessProbe.enabled Enable livenessProbe on Cache server containers
  ## @param server.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param server.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param server.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param server.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param server.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 40
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  ## @param server.readinessProbe.enabled Enable readinessProbe on Cache server containers
  ## @param server.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param server.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param server.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param server.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param server.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 40
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  ## @param server.startupProbe.enabled Enable startupProbe on Cache server containers
  ## @param server.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param server.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param server.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param server.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param server.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 45
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 15
    successThreshold: 1
  ## @param server.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param server.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param server.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Cache server resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param server.resources.limits The resources limits for the Cache server containers
  ## @param server.resources.requests The requested resources for the Cache server containers
  ##
  resources:
    limits: {}
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param server.podSecurityContext.enabled Enabled Cache server pods' Security Context
  ## @param server.podSecurityContext.fsGroup Set Cache server pod's Security Context fsGroup
  ## @param server.podSecurityContext.sysctls [array] List of namespaced sysctls used for the Cache server pods
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
    ## ref: https://geode.apache.org/docs/guide/114/managing/monitor_tune/disabling_tcp_syn_cookies.html
    sysctls:
      - name: net.ipv4.tcp_syncookies
        value: "0"
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param server.containerSecurityContext.enabled Enabled Cache server containers' Security Context
  ## @param server.containerSecurityContext.runAsUser Set Cache server containers' Security Context runAsUser
  ## @param server.containerSecurityContext.runAsNonRoot Set Cache server containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
  ## @param server.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param server.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param server.hostAliases Cache server pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param server.podLabels Extra labels for Cache server pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param server.podAnnotations Annotations for Cache server pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param server.podAffinityPreset Pod affinity preset. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param server.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node server.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param server.nodeAffinityPreset.type Node affinity preset type. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param server.nodeAffinityPreset.key Node label key to match. Ignored if `server.affinity` is set
    ##
    key: ""
    ## @param server.nodeAffinityPreset.values Node label values to match. Ignored if `server.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param server.affinity Affinity for Cache server pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `server.podAffinityPreset`, `server.podAntiAffinityPreset`, and `server.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param server.nodeSelector Node labels for Cache server pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param server.tolerations Tolerations for Cache server pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param server.terminationGracePeriodSeconds In seconds, time the given to the Cache server pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param server.topologySpreadConstraints Topology Spread Constraints for Cache server pods assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param server.updateStrategy.type Cache server statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param server.priorityClassName Cache server pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param server.schedulerName Name of the k8s scheduler (other than default) for Cache server pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param server.lifecycleHooks for the Cache server container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param server.extraFlags Additional command line flags to start Cache server nodes
  ## e.g.
  ## extraFlags:
  ##   - "--J=-Dfoo.bar=true"
  ##
  extraFlags: []
  ## @param server.extraEnvVars Array with extra environment variables to add to Cache server nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param server.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Cache server nodes
  ##
  extraEnvVarsCM: ""
  ## @param server.extraEnvVarsSecret Name of existing Secret containing extra env vars for Cache server nodes
  ##
  extraEnvVarsSecret: ""
  ## @param server.extraVolumes Optionally specify extra list of additional volumes for the Cache server pod(s)
  ##
  extraVolumes: []
  ## @param server.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Cache server container(s)
  ##
  extraVolumeMounts: []
  ## @param server.sidecars Add additional sidecar containers to the Cache server pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param server.initContainers Add additional init containers to the Cache server pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Apache Geode Cache server (headless) service parameters
  ##
  service:
    ## @param server.service.ports.server Cache server multicast service port
    ## @param server.service.ports.http Cache server HTTP service port
    ## @param server.service.ports.rmi Cache server RMI service port
    ##
    ports:
      server: 40404
      http: 7070
      rmi: 1099
    ## @param server.service.annotations Additional custom annotations for Cache server service
    ##
    annotations: {}
  ## Apache Geode Cache server persistence parameters
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param server.persistence.enabled Enable persistence on Cache server replicas using a `PersistentVolumeClaim`
    ##
    enabled: true
    ## @param server.persistence.storageClass MariaDB secondary persistent volume storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## @param server.persistence.annotations MariaDB secondary persistent volume claim annotations
    ##
    annotations: {}
    ## @param server.persistence.accessModes MariaDB secondary persistent volume access Modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param server.persistence.size MariaDB secondary persistent volume size
    ##
    size: 8Gi

## @section Traffic Exposure Parameters


## Apache Geode ingress parameters
## ref: https://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for Apache Geode
  ##
  enabled: false
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: geode.local
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /pulse
  ## @param ingress.annotations [object] Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations:
    # Session affinity is required, see https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/
    nginx.ingress.kubernetes.io/affinity: cookie
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: geode.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - geode.local
  ##   secretName: geode.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: geode.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
  ## @param ingress.extraRules Additional rules to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
  ## e.g:
  ## extraRules:
  ## - host: example.local
  ##     http:
  ##       path: /
  ##       backend: 
  ##         service:
  ##           name: example-svc
  ##           port:
  ##             name: http
  ##
  extraRules: []

## @section Init Container Parameters

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the *podSecurityContext/*containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## Bitnami Shell image
  ## ref: https://hub.docker.com/r/bitnami/bitnami-shell/tags/
  ## @param volumePermissions.image.registry Bitnami Shell image registry
  ## @param volumePermissions.image.repository Bitnami Shell image repository
  ## @param volumePermissions.image.tag Bitnami Shell image tag (immutable tags are recommended)
  ## @param volumePermissions.image.pullPolicy Bitnami Shell image pull policy
  ## @param volumePermissions.image.pullSecrets Bitnami Shell image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 11-debian-11-r3
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container's resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits The resources limits for the init container
  ## @param volumePermissions.resources.requests The requested resources for the init container
  ##
  resources:
    limits: {}
    requests: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.containerSecurityContext.enabled Enabled init container Security Context
  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0

## @section Metrics parameters
##
metrics:
  ## @param metrics.enabled Expose Apache Geode metrics
  ##
  enabled: false
  ## Bitnami HAProxy image
  ## ref: https://hub.docker.com/r/bitnami/haproxy/tags/
  ## @param metrics.image.registry Bitnami HAProxy image registry
  ## @param metrics.image.repository Bitnami HAProxy image repository
  ## @param metrics.image.tag Bitnami HAProxy image tag (immutable tags are recommended)
  ## @param metrics.image.pullPolicy Bitnami HAProxy image pull policy
  ## @param metrics.image.pullSecrets Bitnami HAProxy image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/haproxy
    tag: 2.6.0-debian-11-r3
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param metrics.containerPort Metrics container port
  ##
  containerPort: 9914
  ## Configure extra options for Metrics containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param metrics.livenessProbe.enabled Enable livenessProbe on Metrics containers
  ## @param metrics.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param metrics.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param metrics.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param metrics.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param metrics.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 15
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  ## @param metrics.readinessProbe.enabled Enable readinessProbe on Metrics containers
  ## @param metrics.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param metrics.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param metrics.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param metrics.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param metrics.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 15
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  ## @param metrics.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param metrics.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param metrics.containerSecurityContext.enabled Enabled Metrics containers' Security Context
  ## @param metrics.containerSecurityContext.runAsUser Set Metrics containers' Security Context runAsUser
  ## @param metrics.containerSecurityContext.runAsNonRoot Set Metrics containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
  ## Apache Geode metrics service parameters
  ##
  service:
    ## @param metrics.service.port Service HTTP management port
    ##
    port: 9914
    ## @param metrics.service.annotations [object] Annotations for enabling prometheus to access the metrics endpoints
    ##
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.metrics.service.port }}"
      prometheus.io/path: "/"
  ## Prometheus Service Monitor
  ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled Specify if a ServiceMonitor will be deployed for Prometheus Operator
    ##
    enabled: false
    ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
    ##
    labels: {}
    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
    ##
    jobLabel: ""
    ## @param metrics.serviceMonitor.interval How frequently to scrape metrics
    ## e.g:
    ## interval: 10s
    ##
    interval: ""
    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## e.g:
    ## scrapeTimeout: 10s
    ##
    scrapeTimeout: ""
    ## @param metrics.serviceMonitor.metricRelabelings [array] Specify additional relabeling of metrics
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.relabelings [array] Specify general relabeling
    ##
    relabelings: []
    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
    ##
    selector: {}
    ## @param metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
    ##
    honorLabels: false

## @section Other Parameters

## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
## @param serviceAccount.create Specifies whether a ServiceAccount should be created
## @param serviceAccount.name Name of the service account to use. If not set and create is true, a name is generated using the fullname template.
## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
## @param serviceAccount.annotations Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
##
serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: false
  annotations: {}

## Network policies
## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
  ##
  enabled: false
  ## @param networkPolicy.allowExternal Don't require client label for connections
  ## When set to false, only pods with the correct client label will have network access to the ports
  ## the Apache Geode nodes are listening on.
  ## When true, Apache Geode nodes accept connections from any source (with the correct destination port).
  ##
  allowExternal: true
